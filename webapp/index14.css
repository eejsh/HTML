@charset "UTF-8";

body { 	margin: 0; 	padding: 0; }
span, label { display: block; }
ol, ul { line-height: none; margin: 0; 	padding: 0; }
.box1 {	width: 100px;	height: 100px;	background-color: orange;	padding-left: 50px; }

.box2 {
	width: 100px;
	height: 100px;
	background-color: green;
	padding-left: 50px;
	box-sizing: border-box;
}
/* [ box-sizing ] border-box : padding, border도 적용되어짐 
ex) padding 사용시 padding잡은만큼 크키추가됨 border-box 사용시 사이즈안늘어남..


*/
.box3 {	width: 100px; height: 100px; border: 1px solid red; }
.box4 {	width: 100px; height: 100px; border: 1px solid red; box-sizing: border-box; }

/*
nth-child (DOM)
nth-of-type (NODE)
front는 node사용 → jsp 떄문..
.ulcss>li  = ulcss안에 있는것
*/

/*Dom객체 : 자식태그를 순서대로 나열함 */
.ulcss>li:nth-child(1) {color: red;}
.ulcss>li:nth-child(4) {color: red;}
.ulcss>li:nth-child(5) {color: red;}

/*node객체 : 태그끼리 별도로 node 숫자를 나열함. */

.olcss>li:nth-of-type(2) {color: blue;}
.olcss>li:nth-of-type(3) {color: blue;}

/*node :.div2>span:nth-of-type 은 같은 태그끼리 넘버링함 span이 총 3개 이므로 4번째가 아닌 span개수의 순서로 잡아줘야함 */
.div1>span:nth-child(4){color:red; }
.div2>span:nth-of-type(3){color:red; }
.div2>span:nth-of-type(1){color:blue; }

/*DOM*/
.object1{ }
.object1>span{ /* .object>span: object1 안에 있는 span 태그들만 적용*/
	width:50px; height: 50px; background-color: blue; 
}
.object1 > span:nth-child(2){
	background-color: yellow;
}

.object1 > span:nth-child(odd){ /*odd(홀수번호), even(짝수)*/
	background-color: red;
}

.object1{ }
.object2>span, label{ /* .object>span: object1 안에 있는 span 태그들만 적용*/
	width:50px; height: 50px; background-color: blue; 
}

/*, 하면 전체적으로 적용 > 로 선택해줘야됨*/
.object2 > span:nth-of-type(even), .object2>label:nth-of-type(odd){
	background-color: yellowgreen;
}

